package edu.stevens.cs562.emf.target;
import java.sql.*;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class GeneratedProgram {

	class FaiStruct { 
		/*			 	
        * TODO: Generated from source code. printAttributes(); printConstructor();			 	
        */
    }

    public static void main(String[] args) {
    	GeneratedProgram gp = new GeneratedProgram();
    	gp.retrieve();
    }
    
    private static final String USER = "postgres";
	private static final String PWD = "ericwang9079";
	private static final String URL = "jdbc:postgresql://localhost:5432/postgres";
	private static final String SQLDRIVER = "org.postgresql.Driver";
    private PreparedStatement ps = null;
	private Connection conn = null;
	private ResultSet rs = null;

	/**
	 * Get database connection
	 * @return 
	 * @throws SQLException
	 * @throws ClassNotFoundException
	 */
    public Connection getConn() throws SQLException, ClassNotFoundException {
		Class.forName(SQLDRIVER);
		System.out.println("Success loading Driver!");
		conn = DriverManager.getConnection(URL, USER, PWD);
		System.out.println("Success connecting server!");
		return conn;
	}
	
	/**
	 * Close database connection
	 * @param conn
	 * @param ps
	 * @param rs
	 */
	public void close(Connection conn, PreparedStatement ps, ResultSet rs) {
		try {
			if (rs != null) {
				rs.close();
			}
			if (ps != null) {
				ps.close();
			}
			if (conn != null) {
				conn.close();
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

    /**
	 * Function to retrieve from the database and process on the result set received
	 */
    public void retrieve(){
		
        try {
        	conn = this.getConn();   
			System.out.println("Success connecting server!");
			ps = conn.prepareStatement("select * from sales"); 
	        Map<String, FaiStruct> map = new HashMap<String, FaiStruct>();
			
			/*			 	
        	* TODO: Generated from source code. printAlgorithm();			 	
        	*/
        	
				rs = ps.executeQuery(); 
            	boolean more;
            	more=rs.next();                         
            	String key = null;
        		
        		/*			 	
        		* TODO: Generated from source code. printAlgorithm();		 	
        		*/
								
	        			Iterator<String> iter = map.keySet().iterator();
						while(iter.hasNext()){
							key = iter.next();
							FaiStruct fs = map.get(key);
	        				switch (i) {
	        				
	        					/*			 	
        						* TODO: Generated from source code. printAlgorithm();		 	
        						*/
        						
	        				default:
	            				break;
	        				}
	        	
	        	/*			 	
        		* TODO: Generated from source code. printAlgorithm();			 	
        		*/
        		
        } catch(SQLException e) {
        	System.out.println("Connection URL or username or password errors!");
        	e.printStackTrace();
        } catch (ClassNotFoundException e) {
			e.printStackTrace();
		} finally {
			this.close(conn, ps, rs); 
	    }
    }    
}