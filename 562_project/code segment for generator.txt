package edu.stevens.cs562.emf;
import java.sql.*;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class GeneratedProgram {

	class FaiStruct { 
    }

    public static void main(String[] args) {
    	GeneratedProgram gp = new GeneratedProgram();
    	gp.retrieve();
    }
    
    private PreparedStatement ps = null;
	private Connection conn = null;
	private ResultSet rs = null;

    public Connection getConn() throws SQLException, ClassNotFoundException {
		// set up database's user name, password and URL
		String usr = "postgres";
		String pwd = "ericwang9079";
		String url = "jdbc:postgresql://localhost:5432/postgres";
		Class.forName("org.postgresql.Driver");
		System.out.println("Success loading Driver!");
		conn = DriverManager.getConnection(url, usr, pwd);
		System.out.println("Success connecting server!");
		return conn;
	}
	
	public void close(Connection conn, PreparedStatement ps, ResultSet rs) {
		try {
			if (rs != null) {
				rs.close();
			}
			if (ps != null) {
				ps.close();
			}
			if (conn != null) {
				conn.close();
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

    //Function to retrieve from the database and process on the result set received
    
    public void retrieve(){
		
        try {
        	conn = this.getConn();    //connect to the database using the password and username
			System.out.println("Success connecting server!");
			ps = conn.prepareStatement("select * from sales"); 
	        Map<String, FaiStruct> map = new HashMap<String, FaiStruct>();
        	//each time caculate one [F] (aggregate function)
        	//first time build HashMap and fill grouping variable and caculate F0, next n time caculate F2 to Fn 
        	//read the EMF paper page 6 will help you to understand the algorithm
		
				rs = ps.executeQuery();  //ResultSet object gets the set of values retrieved from the database
            	boolean more;
            	more=rs.next();                         //checking if more rows available

            	String key = null;
        		
        		/*			 	
        		* TODO: Generated from source code			 	
        		*/
								
	        			Iterator<String> iter = map.keySet().iterator();
						while(iter.hasNext()){
							key = iter.next();
							FaiStruct fs = map.get(key);
	        				switch (i) {
	        				
	        				default:
	            				break;
	        				}
        } catch(SQLException e) {
        	System.out.println("Connection URL or username or password errors!");
        	e.printStackTrace();
        } catch (ClassNotFoundException e) {
			e.printStackTrace();
		} finally {
			this.close(conn, ps, rs); //close the connection
	    }
    }    
}